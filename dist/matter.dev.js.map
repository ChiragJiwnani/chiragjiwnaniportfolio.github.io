{"version":3,"sources":["matter.js"],"names":["w","canvas","ctx","mouse","x","y","px","py","down","canvas_width","canvas_height","resolution","pen_size","num_cols","num_rows","speck_count","vec_cells","particles","init","document","getElementById","getContext","width","height","i","push","particle","Math","random","col","row","cell_data","cell","row_up","col_left","col_right","up","left","up_left","up_right","right","down_right","down_left","addEventListener","mouse_down_handler","touch_start_handler","mouse_up_handler","touch_end_handler","mouse_move_handler","touch_move_handler","onload","draw","update_particle","length","p","parseInt","ax","ay","xv","yv","dx","dy","dist","sqrt","limit","lineWidth","beginPath","moveTo","lineTo","stroke","mouse_xv","mouse_yv","cell_datas","j","change_cell_velocity","update_pressure","clearRect","strokeStyle","update_velocity","requestAnimationFrame","mvelX","mvelY","power","pressure_x","pressure_y","pressure","res","r","e","preventDefault","rect","getBoundingClientRect","touches","pageX","pageY","top","offsetX","layerX","offsetY","layerY","Fluid","initialize","window","webkitRequestAnimationFrame","mozRequestAnimationFrame"],"mappings":"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","sourcesContent":["\n\n(function (w) {\n  var canvas, ctx;\n\n  \n    \n  var mouse = {\n    x: 0,\n    y: 0,\n    px: 0,\n    py: 0,\n    down: false\n  };\n\n  /*\n    These are the variable definitions for the values that will be used \n    throughout the rest of the script.\n    */\n  var canvas_width = 500; //Needs to be a multiple of the resolution value below.\n  var canvas_height = 500; //This too.\n\n  var resolution = 10; //Width and height of each cell in the grid.\n\n  var pen_size = 40; //Radius around the mouse cursor coordinates to reach when stirring\n\n  var num_cols = canvas_width / resolution; //This value is the number of columns in the grid.\n  var num_rows = canvas_height / resolution; //This is number of rows.\n  var speck_count = 5000; //This determines how many particles will be made.\n\n  var vec_cells = []; //The array that will contain the grid cells\n  var particles = []; //The array that will contain the particles\n\n  function init() {\n    //These lines get the canvas DOM element and canvas context, respectively.\n    canvas = document.getElementById(\"wrapper-canvas\");\n    ctx = canvas.getContext(\"2d\");\n\n    //These two set the width and height of the canvas to the defined values.\n    canvas.width = canvas_width;\n    canvas.height = canvas_height;\n\n    \n    for (i = 0; i < speck_count; i++) {\n    \n      particles.push(\n        new particle(\n          Math.random() * canvas_width,\n          Math.random() * canvas_height\n        )\n      );\n    }\n\n    //This loops through the count of columns.\n    for (col = 0; col < num_cols; col++) {\n      //This defines the array element as another array.\n      vec_cells[col] = [];\n\n      //This loops through the count of rows.\n      for (row = 0; row < num_rows; row++) {\n      \n        var cell_data = new cell(\n          col * resolution,\n          row * resolution,\n          resolution\n        );\n\n        //This pushes the cell object into the grid array.\n        vec_cells[col][row] = cell_data;\n\n        vec_cells[col][row].col = col;\n        vec_cells[col][row].row = row;\n      }\n    }\n\n   \n    for (col = 0; col < num_cols; col++) {\n      for (row = 0; row < num_rows; row++) {\n    \n        var cell_data = vec_cells[col][row];\n\n       \n        var row_up = row - 1 >= 0 ? row - 1 : num_rows - 1;\n        var col_left = col - 1 >= 0 ? col - 1 : num_cols - 1;\n        var col_right = col + 1 < num_cols ? col + 1 : 0;\n\n        //Get the reference to the cell on the row above.\n        var up = vec_cells[col][row_up];\n        var left = vec_cells[col_left][row];\n        var up_left = vec_cells[col_left][row_up];\n        var up_right = vec_cells[col_right][row_up];\n\n       \n        cell_data.up = up;\n        cell_data.left = left;\n        cell_data.up_left = up_left;\n        cell_data.up_right = up_right;\n\n        /*\n                Set the neighboring cell's opposite attributes to point to the current cell.\n                */\n        up.down = vec_cells[col][row];\n        left.right = vec_cells[col][row];\n        up_left.down_right = vec_cells[col][row];\n        up_right.down_left = vec_cells[col][row];\n      }\n    }\n\n    \n    w.addEventListener(\"mousedown\", mouse_down_handler);\n    w.addEventListener(\"touchstart\", touch_start_handler);\n\n    w.addEventListener(\"mouseup\", mouse_up_handler);\n    w.addEventListener(\"touchend\", touch_end_handler);\n\n    canvas.addEventListener(\"mousemove\", mouse_move_handler);\n    canvas.addEventListener(\"touchmove\", touch_move_handler);\n\n    //When the page is finished loading, run the draw() function.\n    w.onload = draw;\n  }\n\n \n  function update_particle() {\n    //Loops through all of the particles in the array\n    for (i = 0; i < particles.length; i++) {\n      //Sets this variable to the current particle so we can refer to the particle easier.\n      var p = particles[i];\n\n      //If the particle's X and Y coordinates are within the bounds of the canvas...\n      if (p.x >= 0 && p.x < canvas_width && p.y >= 0 && p.y < canvas_height) {\n        /*\n                These lines divide the X and Y values by the size of each cell. This number is\n                then parsed to a whole number to determine which grid cell the particle is above.\n                */\n        var col = parseInt(p.x / resolution);\n        var row = parseInt(p.y / resolution);\n\n        //Same as above, store reference to cell\n        var cell_data = vec_cells[col][row];\n\n        var ax = (p.x % resolution) / resolution;\n        var ay = (p.y % resolution) / resolution;\n\n        \n        p.xv += (1 - ax) * cell_data.xv * 0.05;\n        p.yv += (1 - ay) * cell_data.yv * 0.05;\n\n      \n        p.xv += ax * cell_data.right.xv * 0.05;\n        p.yv += ax * cell_data.right.yv * 0.05;\n\n        p.xv += ay * cell_data.down.xv * 0.05;\n        p.yv += ay * cell_data.down.yv * 0.05;\n\n        //This adds the calculated velocity to the position coordinates of the particle.\n        p.x += p.xv;\n        p.y += p.yv;\n\n        //For each axis, this gets the distance between the old position of the particle and it's new position.\n        var dx = p.px - p.x;\n        var dy = p.py - p.y;\n\n        //Using the Pythagorean theorum (A^2 + B^2 = C^2), this determines the distance the particle travelled.\n        var dist = Math.sqrt(dx * dx + dy * dy);\n\n        //This line generates a random value between 0 and 0.5\n        var limit = Math.random() * 0.5;\n\n        //If the distance the particle has travelled this frame is greater than the random value...\n        if (dist > limit) {\n          ctx.lineWidth = 1;\n          ctx.beginPath(); //Begin a new path on the canvas\n          ctx.moveTo(p.x, p.y); //Move the drawing cursor to the starting point\n          ctx.lineTo(p.px, p.py); //Describe a line from the particle's old coordinates to the new ones\n          ctx.stroke(); //Draw the path to the canvas\n        } else {\n          //If the particle hasn't moved further than the random limit...\n\n          ctx.beginPath();\n          ctx.moveTo(p.x, p.y);\n\n          ctx.lineTo(p.x + limit, p.y + limit);\n\n          ctx.stroke();\n        }\n\n        //This updates the previous X and Y coordinates of the particle to the new ones for the next loop.\n        p.px = p.x;\n        p.py = p.y;\n      } else {\n        //If the particle's X and Y coordinates are outside the bounds of the canvas...\n\n        //Place the particle at a random location on the canvas\n        p.x = p.px = Math.random() * canvas_width;\n        p.y = p.py = Math.random() * canvas_height;\n\n        //Set the particles velocity to zero.\n        p.xv = 0;\n        p.yv = 0;\n      }\n\n      //These lines divide the particle's velocity in half everytime it loops, slowing them over time.\n      p.xv *= 0.5;\n      p.yv *= 0.5;\n    }\n  }\n\n  \n  function draw() {\n   \n    var mouse_xv = mouse.x - mouse.px;\n    var mouse_yv = mouse.y - mouse.py;\n\n    //Loops through all of the columns\n    for (i = 0; i < vec_cells.length; i++) {\n      var cell_datas = vec_cells[i];\n\n      //Loops through all of the rows\n      for (j = 0; j < cell_datas.length; j++) {\n        //References the current cell\n        var cell_data = cell_datas[j];\n\n        //If the mouse button is down, updates the cell velocity using the mouse velocity\n        if (mouse.down) {\n          change_cell_velocity(cell_data, mouse_xv, mouse_yv, pen_size);\n        }\n\n        //This updates the pressure values for the cell.\n        update_pressure(cell_data);\n      }\n    }\n\n   \n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    //This sets the color to draw with.\n    ctx.strokeStyle = \"#00FFFF\";\n\n    //This calls the function to update the particle positions.\n    update_particle();\n\n    \n    for (i = 0; i < vec_cells.length; i++) {\n      var cell_datas = vec_cells[i];\n\n      for (j = 0; j < cell_datas.length; j++) {\n        var cell_data = cell_datas[j];\n\n        update_velocity(cell_data);\n      }\n    }\n\n    //This replaces the previous mouse coordinates values with the current ones for the next frame.\n    mouse.px = mouse.x;\n    mouse.py = mouse.y;\n\n    //This requests the next animation frame which runs the draw() function again.\n    requestAnimationFrame(draw);\n  }\n\n  \n  function change_cell_velocity(cell_data, mvelX, mvelY, pen_size) {\n    //This gets the distance between the cell and the mouse cursor.\n    var dx = cell_data.x - mouse.x;\n    var dy = cell_data.y - mouse.y;\n    var dist = Math.sqrt(dy * dy + dx * dx);\n\n    //If the distance is less than the radius...\n    if (dist < pen_size) {\n      //If the distance is very small, set it to the pen_size.\n      if (dist < 4) {\n        dist = pen_size;\n      }\n\n      //Calculate the magnitude of the mouse's effect (closer is stronger)\n      var power = pen_size / dist;\n\n      /*\n            Apply the velocity to the cell by multiplying the power by the mouse velocity and adding it to the cell velocity\n            */\n      cell_data.xv += mvelX * power;\n      cell_data.yv += mvelY * power;\n    }\n  }\n\n  \n  function update_pressure(cell_data) {\n    //This calculates the collective pressure on the X axis by summing the surrounding velocities\n    var pressure_x =\n      cell_data.up_left.xv * 0.5 + //Divided in half because it's diagonal\n      cell_data.left.xv +\n      cell_data.down_left.xv * 0.5 - //Same\n      cell_data.up_right.xv * 0.5 - //Same\n      cell_data.right.xv -\n      cell_data.down_right.xv * 0.5; //Same\n\n    //This does the same for the Y axis.\n    var pressure_y =\n      cell_data.up_left.yv * 0.5 +\n      cell_data.up.yv +\n      cell_data.up_right.yv * 0.5 -\n      cell_data.down_left.yv * 0.5 -\n      cell_data.down.yv -\n      cell_data.down_right.yv * 0.5;\n\n    //This sets the cell pressure to one-fourth the sum of both axis pressure.\n    cell_data.pressure = (pressure_x + pressure_y) * 0.25;\n  }\n\n \n  function update_velocity(cell_data) {\n    /*\n        This adds one-fourth of the collective pressure from surrounding cells to the \n        cell's X axis velocity.\n        */\n    cell_data.xv +=\n      (cell_data.up_left.pressure * 0.5 +\n        cell_data.left.pressure +\n        cell_data.down_left.pressure * 0.5 -\n        cell_data.up_right.pressure * 0.5 -\n        cell_data.right.pressure -\n        cell_data.down_right.pressure * 0.5) *\n      0.25;\n\n    //This does the same for the Y axis.\n    cell_data.yv +=\n      (cell_data.up_left.pressure * 0.5 +\n        cell_data.up.pressure +\n        cell_data.up_right.pressure * 0.5 -\n        cell_data.down_left.pressure * 0.5 -\n        cell_data.down.pressure -\n        cell_data.down_right.pressure * 0.5) *\n      0.25;\n\n    /*\n        This slowly decreases the cell's velocity over time so that the fluid stops\n        if it's left alone.\n        */\n    cell_data.xv *= 0.99;\n    cell_data.yv *= 0.99;\n  }\n\n  //This function is used to create a cell object.\n  function cell(x, y, res) {\n    //This stores the position to place the cell on the canvas\n    this.x = x;\n    this.y = y;\n\n    //This is the width and height of the cell\n    this.r = res;\n\n    //These are the attributes that will hold the row and column values\n    this.col = 0;\n    this.row = 0;\n\n    //This stores the cell's velocity\n    this.xv = 0;\n    this.yv = 0;\n\n    //This is the pressure attribute\n    this.pressure = 0;\n  }\n\n  //This function is used to create a particle object.\n  function particle(x, y) {\n    this.x = this.px = x;\n    this.y = this.py = y;\n    this.xv = this.yv = 0;\n  }\n\n  function mouse_down_handler(e) {\n    e.preventDefault(); //Prevents the default action from happening (e.g. navigation)\n    mouse.down = true; //Sets the mouse object's \"down\" value to true\n  }\n\n  //This function is called whenever the mouse button is released.\n  function mouse_up_handler() {\n    mouse.down = false;\n  }\n\n  //This function is called whenever a touch is registered.\n  function touch_start_handler(e) {\n    e.preventDefault(); //Prevents the default action from happening (e.g. navigation)\n    var rect = canvas.getBoundingClientRect();\n    mouse.x = mouse.px = e.touches[0].pageX - rect.left; //Set both previous and current coordinates\n    mouse.y = mouse.py = e.touches[0].pageY - rect.top;\n    mouse.down = true; //Sets the mouse object's \"down\" value to true\n  }\n\n  //This function is called whenever a touch point is removed from the screen.\n  function touch_end_handler(e) {\n    if (!e.touches) mouse.down = false; //If there are no more touches on the screen, sets \"down\" to false.\n  }\n\n  /*\n    This function is called whenever the mouse coordinates have changed. The coordinates are checked by the \n    browser at intervals.\n    */\n  function mouse_move_handler(e) {\n    e.preventDefault(); //Prevents the default action from happening\n    //Saves the previous coordinates\n    mouse.px = mouse.x;\n    mouse.py = mouse.y;\n\n    //Sets the new coordinates\n    mouse.x = e.offsetX || e.layerX;\n    mouse.y = e.offsetY || e.layerY;\n  }\n\n  /*\n    This function is called whenever one of the coordinates have changed. The coordinates are checked by the \n    browser at intervals.\n    */\n  function touch_move_handler(e) {\n    e.preventDefault(); //Prevents the default action from happening\n    mouse.px = mouse.x;\n    mouse.py = mouse.y;\n\n    //This line gets the coordinates for where the canvas is positioned on the screen.\n    var rect = canvas.getBoundingClientRect();\n\n   \n    mouse.x = e.touches[0].pageX - rect.left;\n    mouse.y = e.touches[0].pageY - rect.top;\n  }\n\n  \n  w.Fluid = {\n    initialize: init\n  };\n})(window); //Passes \"window\" into the self-invoking function.\n\n/*\nRequest animation frame polyfill. This enables you to use \"requestAnimationFrame\" \nregardless of the browser the script is running in.\n*/\nwindow.requestAnimationFrame =\n  window.requestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.mozRequestAnimationFrame;\n\n//And this line calls the init() function defined above to start the script.\nFluid.initialize();\n"],"file":"matter.dev.js"}