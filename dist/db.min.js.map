{"version":3,"sources":["db.js"],"names":["express","require","path","app","mongoose","connect","fs","contactSchema","Schema","useNewUrlParser","email","String","port","model","address","get","req","res","put","render","post","Contact","body","save","then","send","myData","status","listen","console","log","concat"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,GAAOC,QAAGA,MAGVE,IAAMH,UAFNE,SAAOD,QAAQ,YAIrBG,SAASC,QAAQ,gCAAiC,CAH5CC,iBAAY,IAClB,IAAMH,KAAMH,GAQRO,cAAgB,IAAIH,SAASI,OAAO,CANxCJ,KAASC,OACLI,MAAAA,OADJC,MAAAC,OAGMC,QAAND,SAIUA,QAD8BP,SAAAS,MAAA,UAAAN,eAGpCG,IAAAA,IAAK,UAH+BV,QAAA,OAAA,WAIpCc,IAAAA,IAAAA,QAASH,cAgBbR,IAAIY,IAAI,WAAY,SAACC,EAAKC,GACtBA,EAAMC,OAAN,KAAAC,OAAA,cADI,MAKRhB,IAAIiB,KAAK,WAAY,SAAAJ,EAAAC,GACJ,IAAII,QAAQL,EAAIM,MACtBC,OAAOC,KAAK,WACXC,EAAJA,KAAS,8CADbC,MAAA,WAGQC,EAAAA,OAAJ,KAAAF,KAAqB,yCAO5BtB,IAFDyB,OAAAhB,KAAA,WACIiB,QAAQC,IAAR,gDAAAC,OAA4DnB","file":"db.min.js","sourcesContent":["const express = require(\"express\")\r\nconst path = require(\"path\")\r\nconst fs = require(\"fs\")\r\nconst app = express()\r\nvar mongoose = require(\"mongoose\")\r\nmongoose.connect(\"mongodb://localhost/Portfolio\", {\r\n    useNewUrlParser: true\r\n})\r\nconst port = 80\r\n\r\n// Define mongoose schema \r\nvar contactSchema = new mongoose.Schema({\r\n    name: String,\r\n    phone: String,\r\n    email: String,\r\n    address: String\r\n  });\r\n\r\n  const Contact = mongoose.model('Contact', contactSchema);  \r\n\r\napp.use(\"/static\", express.static(\"static\"))\r\napp.use(express.urlencoded())\r\n\r\n// app.set(\"view engine\", \"pug\")\r\n// app.set(\"views\", path.join(__dirname, \"views\"))\r\n\r\n// app.get(\"/\", (req, res) => {\r\n//     const put = {}\r\n//     res.status(200).render(\"home.pug\",put)\r\n// })\r\n\r\napp.get(\"/contact\", (req, res) => {\r\n    const put = {}\r\n    res.status(200).render(\"contact.pug\",put)\r\n})\r\n\r\napp.post(\"/contact\", (req, res) => {\r\n    var myData = new Contact(req.body)\r\n    myData.save().then(()=>{\r\n        res.send(\"This item has been saved to the database\")\r\n    }).catch(()=>{\r\n        res.status(400).send(\"Item was not send to the database\")\r\n    })\r\n    // res.status(200).render(\"contact.pug\" )\r\n})\r\n\r\napp.listen(port, () => {\r\n    console.log(`The application started successfully on port ${port}`)\r\n})"]}